#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 2364 0 24 29 1 #"\n"
0 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/draw"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;;;;;;;;;;;;;;;;;INTERNAL DEF's for PICTURE LANGUAGE ;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"; thanks to:"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; http://notebook.xyli.me/SICP/SICP-with-DrRacket/"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";(#%require sicp-pict)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 9 #"sicp-pict"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;;;;;;;;;;;;;;;;;;;;;;;TESTING;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";(paint mark-of-zorro)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";(paint black) ; white and gray also available"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(paint diagonal-shading)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;;;;;;;;;;;;FROM BOOK;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";(define pic1 (beside einstein (flip-vert einstein)))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(define pic2 (below pic1 pic1))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";(paint pic1)"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";(paint pic2)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(paint einstein)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(paint (flip-horiz einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"flipped-pairs"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"painter2"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"flip-vert"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";(define pic4 (flipped-pairs einstein))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";(paint pic4)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define pic5a (right-split einstein 0))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic5a)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define pic5b (right-split einstein 1))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic5b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define pic5c (right-split einstein 2))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic5c)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define pic5d (right-split einstein 3))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic5d)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 24 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(define pic6a (up-split einstein 0))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic6a)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(define pic6b (up-split einstein 1))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic6b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(define pic6c (up-split einstein 2))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic6c)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(define pic6d (up-split einstein 3))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic6d)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"up"
0 0 24 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"top-left"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 1 #" "
0 0 14 3 2 #"up"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"bottom-right"
0 0 24 3 2 #" ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"corner"
0 0 24 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 8 #"top-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 12 #"bottom-right"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 6 #"corner"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";(define pic7a (corner-split einstein 0))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic7a)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";(define pic7b (corner-split einstein 1))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic7b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";(define pic7c (corner-split einstein 2))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic7c)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";(define pic7d (corner-split einstein 3))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic7d)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"square-limit"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"quarter"
0 0 24 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"half"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 10 #"flip-horiz"
0 0 24 3 1 #" "
0 0 14 3 7 #"quarter"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 7 #"quarter"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"below"
0 0 24 3 2 #" ("
0 0 14 3 9 #"flip-vert"
0 0 24 3 1 #" "
0 0 14 3 4 #"half"
0 0 24 3 2 #") "
0 0 14 3 4 #"half"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(define pic8a1 (square-limit einstein 4))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";(paint pic8a1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; ex2.44;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.44"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";Already done above (i.e. design of up-split procedures"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; for completeness added below "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";(define (up-split painter n)"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";  (if (= n 0)"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";      painter"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";      (let ((smaller (up-split painter "
0 0 24 29 1 #"\n"
0 0 17 3 45 #";                                  (- n 1))))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";        (below painter "
0 0 24 29 1 #"\n"
0 0 17 3 45 #";                (beside smaller smaller)))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";Higher-order operations;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 12 #"Higher-order"
0 0 24 3 1 #" "
0 0 14 3 10 #"operations"
0 0 24 3 1 #")"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"square-of-four"
0 0 24 3 1 #" "
0 0 14 3 2 #"tl"
0 0 24 3 1 #" "
0 0 14 3 2 #"tr"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"top"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 2 #"tl"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"tr"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"bottom"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"br"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 24 3 1 #" "
0 0 14 3 3 #"top"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";to reproduce the flip-pairs using square-of-four:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define pic8a (flipped-pairs einstein))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic8a)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pic8b"
0 0 24 3 3 #" (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 9 #"flip-vert"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 9 #"flip-vert"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 8 #"einstein"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic8b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";or even using \"identity\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pic8c"
0 0 24 3 3 #" (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 9 #"flip-vert"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 8 #"identity"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 9 #"flip-vert"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 8 #"einstein"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic8c)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";to reproduce the square-limit using square-of-four:"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; note can be used either with rotate180 or composion of flip-vert f"
 #"lip-horiz"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pic9a"
0 0 24 3 2 #" ("
0 0 14 3 12 #"square-limit"
0 0 24 3 1 #" "
0 0 14 3 8 #"einstein"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic9a)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; to demonstrate rotate180 is equal to combo of vert and horiz first"
 #":"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";(paint (rotate180 einstein))"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(paint (flip-vert (flip-horiz einstein)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"pic9b"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 14 #"square-of-four"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 8 #"identity"
0 0 24 3 3 #") ("
0 0 14 3 10 #"flip-horiz"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 8 #"identity"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"rotate180"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 8 #"identity"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"rotate180"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 14 #"square-of-four"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 8 #"identity"
0 0 24 3 3 #") ("
0 0 14 3 10 #"flip-horiz"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"einstein"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";(paint pic9b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";but there is a way to do it with the n defined:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"square-limit2"
0 0 24 3 1 #" "
0 0 14 3 7 #"picture"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"new"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"square-of-four"
0 0 24 3 1 #" "
0 0 14 3 10 #"flip-horiz"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 8 #"identity"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 9 #"rotate180"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 9 #"flip-vert"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"picture"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";(paint (square-limit2 einstein 2))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; ex2.45;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.45"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         331 21           0 0           0 54 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 24 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 5 #")))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         331 21           0 0           0 54 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 24 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"below"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 5 #")))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";Define"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 49 #"procedure split with the property that evaluating"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";(define right-split (split beside below))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";(define up-split (split below beside))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";produces"
0 0 17 3 1 #" "
0 0 17 3 10 #"procedures"
0 0 17 3 1 #" "
0 0 17 3 11 #"right-split"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 8 #"up-split"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 40 #" behaviors as the ones already defined. "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"split"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 24 3 3 #" (("
0 0 14 3 5 #"split"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"second"
0 0 24 3 2 #") "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 41 #"define right-split1 (split beside below))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 38 #"define up-split1 (split below beside))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(paint (right-split1 einstein 4))"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(paint (up-split1 einstein 4))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";Frames;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"Frames"
0 0 24 3 1 #")"
0 0 17 3 20 #";;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; ex2.46;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.46"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";note - the below won't run yet - we need more definitions "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1327 21           0 0           0 220 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"add-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-vect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"sub-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-vect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"scale-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-vect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"frame-coord-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"add-vect"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"origin-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 8 #"add-vect"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"scale-vect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"xcor-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"edge1-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"scale-vect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ycor-vect"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"edge2-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 6 #"))))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; ex2.47;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.47"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#"; 1st possible constructor: <- will use this one going forward"
0 0 24 29 1 #"\n"
0 9         445 21           0 0           0 73 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-frame"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"origin-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"edge1-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"edge2-frame"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 2 #") "
0 0 17 3 49 #"; this one will be different for the 2nd selector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 4 #"))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; 2nd possible constructor:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         445 21           0 0           0 73 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-frameB"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 24 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"origin-frameB"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"edge1-frameB"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"edge2-frameB"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 2 #") "
0 0 17 3 47 #";this is the only place where the difference is"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #" ("
0 0 17 3 12 #"list 1 2 3))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 14 #"1 (cons 2 3)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(origin-frame a)"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(edge1-frame a)"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(edge2-frame a)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";(origin-frameB b)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(edge1-frameB b)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(edge2-frameB b)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;Painters;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 8 #"Painters"
0 0 24 3 1 #")"
0 0 17 3 13 #";;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;ex2.48;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.48"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 6 #"target"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-bitmap"
0 0 17 3 1 #" "
0 0 17 3 28 #"100 100)) ; A 100x100 bitmap"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 2 #"dc"
0 0 17 3 2 #" ("
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 10 #"bitmap-dc%"
0 0 17 3 18 #" [bitmap target]))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"make-segment"
0 0 17 3 7 #" v1 v2)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cons"
0 0 17 3 8 #" v1 v2))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 18 #" (start-segment v)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (car v))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 16 #" (end-segment v)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"  (cdr v))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 16 #"custom-draw-line"
0 0 17 3 7 #" v1 v2)"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";  (send dc"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";        draw-line"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"        (xcor-vect v1)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"        (ycor-vect v1)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"        (xcor-vect v2)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 24 #"        (ycor-vect v2)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 33 #" (segments->painter segment-list)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"  (lambda (frame)"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";    (for-each"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"     (lambda (segment)"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";       (custom-draw-line"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"        ((frame-coord-map frame) "
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"         (start-segment segment))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"        ((frame-coord-map frame) "
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"         (end-segment segment))))"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";     segment-list)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 16 #"custom-draw-line"
0 0 17 3 2 #" ("
0 0 17 3 6 #"cons 0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 3 #") ("
0 0 17 3 12 #"cons 0 100))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 4 #"send"
0 0 17 3 1 #" "
0 0 17 3 6 #"target"
0 0 17 3 1 #" "
0 0 17 3 9 #"save-file"
0 0 17 3 26 #" \"ex2.48 output.png\" 'png)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;ex2.49;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.49"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; let's here use what's been provided by sicp-pict"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; https://docs.racket-lang.org/sicp-manual/SICP_Picture_Language.htm"
 #"l"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"task1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"vects->segments"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 25 #"segments->painter task1))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"task2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 25 #"segments->painter task2))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"task3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"vects->segments"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 25 #"segments->painter task3))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";not sure about the wave.... from wizard book:"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; https://wizardbook.wordpress.com/2010/12/03/exercise-2-49/"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"wave"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.1"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.6"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.7"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"make-segment"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.3"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 26 #" (segments->painter wave))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";Transforming and combining painters;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 12 #"Transforming"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 9 #"combining"
0 0 24 3 1 #" "
0 0 14 3 8 #"painters"
0 0 24 3 1 #")"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         439 21           0 0           0 72 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 7 #"painter"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 1 #" "
0 0 14 3 7 #"corner1"
0 0 24 3 1 #" "
0 0 14 3 7 #"corner2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"m"
0 0 24 3 2 #" ("
0 0 14 3 15 #"frame-coord-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"new-origin"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 6 #"origin"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"painter"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-frame"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-origin"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"sub-vect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 7 #"corner1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 10 #"new-origin"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"sub-vect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 7 #"corner2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 10 #"new-origin"
0 0 24 3 7 #")))))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         253 21           0 0           0 41 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-flip-vert"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 12 #"; new origin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 18 #"; new end of edge1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #"))) "
0 0 17 3 18 #"; new end of edge2"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-flip-vert"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 12 #"; new origin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 18 #"; new end of edge1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #"))) "
0 0 17 3 18 #"; new end of edge2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 29 #" (custom-flip-vert einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"shrink-to-upper-right"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 32 #"shrink-to-upper-right einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"custom-rotate90"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 26 #"custom-rotate90 einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"squash-inwards"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.65"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.65"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(paint (squash-inwards einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-beside"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter1"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 11 #"split-point"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"paint-left"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 8 #"painter1"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 11 #"split-point"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"paint-right"
0 0 24 3 2 #" ("
0 0 14 3 17 #"transform-painter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 8 #"painter2"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 11 #"split-point"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"paint-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"paint-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 33 #"custom-beside einstein einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;ex2.50;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.50"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";task1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"custom-flip-horiz"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 12 #"; new origin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 18 #"; new end of edge1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #"))) "
0 0 17 3 18 #"; new end of edge2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 10 #" einstein)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 17 #"custom-flip-horiz"
0 0 17 3 11 #" einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";task2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-rotate180"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 12 #"; new origin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 18 #"; new end of edge1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #"))) "
0 0 17 3 18 #"; new end of edge2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 2 #" ("
0 0 17 3 16 #"custom-rotate180"
0 0 17 3 11 #" einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";task3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-rotate270"
0 0 24 3 1 #" "
0 0 14 3 7 #"painter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"painter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #")   "
0 0 17 3 12 #"; new origin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 4 #")   "
0 0 17 3 18 #"; new end of edge1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #"))) "
0 0 17 3 18 #"; new end of edge2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 5 #"paint"
0 0 17 3 29 #" (custom-rotate270 einstein))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;ex2.51;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"ex2.51"
0 0 24 3 1 #")"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; 1st version - similar to beside"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-below1"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter1"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 11 #"split-point"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"paint-down"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 8 #"painter1"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 11 #"split-point"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"paint-up"
0 0 24 3 2 #" ("
0 0 14 3 17 #"transform-painter"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 8 #"painter2"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 11 #"split-point"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"make-vect"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"paint-down"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"paint-up"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"paint"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-below1"
0 0 24 3 1 #" "
0 0 14 3 8 #"einstein"
0 0 24 3 1 #" "
0 0 14 3 8 #"einstein"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; 2nd version - using rotations from ex2.50"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-below2"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter1"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"pic1"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-rotate270"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"pic2"
0 0 24 3 2 #" ("
0 0 14 3 16 #"custom-rotate270"
0 0 24 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"custom-rotate90"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-beside"
0 0 24 3 1 #" "
0 0 14 3 4 #"pic1"
0 0 24 3 1 #" "
0 0 14 3 4 #"pic2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"paint"
0 0 24 3 2 #" ("
0 0 14 3 13 #"custom-below2"
0 0 24 3 1 #" "
0 0 14 3 8 #"einstein"
0 0 24 3 1 #" "
0 0 14 3 8 #"einstein"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0           0
